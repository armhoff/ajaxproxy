buildscript {
	repositories {
		maven {
			url "http://repo.jfrog.org/artifactory/gradle"
		}
		jcenter()
		mavenLocal()
		dependencies {
			classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '3.0.1')
		 	classpath "com.github.jengelman.gradle.plugins:shadow:1.2.4"
		}
	}
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'com.jfrog.artifactory-upload'

group = 'com.thedeanda'
version = '2.3'
sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
	mavenCentral()
	mavenLocal()
}

//def jettyVersion = "9.2.21.v20170120"
def jettyVersion = "9.4.10.v20180503"

dependencies {
	compileOnly "org.projectlombok:lombok:1.16.20"

	compile 'com.thedeanda.javajson:javajson-parser:1.+'

	compile "org.eclipse.jetty:jetty-server:$jettyVersion"
	compile "org.eclipse.jetty:jetty-servlet:$jettyVersion"
	compile "org.eclipse.jetty:apache-jsp:$jettyVersion"


	compile 'com.yahoo.platform.yui:yuicompressor:2.+'
	compile 'commons-cli:commons-cli:1.4'
	compile 'commons-io:commons-io:2.+'
	compile 'org.apache.commons:commons-lang3:3.+'
	compile 'dom4j:dom4j:1.+'
	compile 'org.slf4j:slf4j-api:1.+'
	compile 'org.slf4j:slf4j-simple:1.+'
	compile 'org.apache.httpcomponents:httpclient:4.+'
	compile 'com.h2database:h2:1.4.191'
	compile 'com.j256.ormlite:ormlite-core:4.48'
	compile 'com.j256.ormlite:ormlite-jdbc:4.48'

	compile 'org.japura:japura-gui:7.5.2'

	testCompile 'junit:junit:4.+'
	testCompile 'org.assertj:assertj-core:3.9.+'

	testCompile 'com.thedeanda:lorem:2.+'
	compile 'com.github.jponge:lzma-java:1.3'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
	compile 'org.apache.commons:commons-collections4:4.+'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.thedeanda.ajaxproxy.Main'
    }
}

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "com.github.jengelman.gradle.plugins:shadow:1.2.0"
  }
}

compileJava.doFirst {
	def prop = new Properties()
	def propFile = new File("${project.rootDir}/src/main/resources/version.properties");
	prop.setProperty("version", "$project.version")
	prop.setProperty("build-date", String.valueOf(new Date().getTime()))
	propFile.createNewFile();
	prop.store(propFile.newWriter(), null);

}


configurations {
	published
}
task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}
artifacts {
	published javadocJar
}
